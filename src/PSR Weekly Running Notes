 PSR Week 1
 
    Accomplishments (Week of Jan 15):
      Created simple GUI to run on startup to allow a user to choose between work environments (terminal or web browser
      Began interactive Terminal w/ placeholders for network capture/parse commands
      Began Flask/Web GUI development
      Code/Project Version control through Github

    Plans this week (Week of Jan 22):
      Bug Fixes for above accomplishments
      Enhancements to above accomplishments
      Begin Network Development for SDR tools

    Problems & Issues:
      Deciding best course of action for user experience through GUI mockups
      
      
 PSR Week 2

    Accomplishments (Week of Jan 22):
      Settled on browser GUI design and begun home page/navigation development
      Begun looking at gr-ieee802.11 codebase
      Begun Test Design Review Paper
      Looked into 802.11 variants and their corresponding MAC info (e.g. timing)
      

    Plans this week (Week of Jan 29):
      Present individual 802.11 findings (e.g. a/b/n...) to each team member in order to better understand Wifi variants
      Code Review w/ Team members
      Weekly bug fixes and enhancements

    Problems & Issues:
      Catching up on wireless protocols since team members don't have deep experience in that field
      Learning to design and test commands to decode packets.

PSR Week 3

    Accomplishments (Week of Jan 29):
      Finished introduction of Test Design Review Paper (begun outline for other parts)
      Integration of gr-ieee80211 package into Pentoo test environment
      Flask and home navigation setup
      Begun 4 out of 20 test cases for testing SUPERFREQ app functionality
      
 
    Plans this week (Week of Feb 05):
      Continue development on test cases
      Begin integration of basic HackRF functions into Flask and Terminal units
      Weekly bug fixes and enhancements on main app


    Problems & Issues:
      OS Environment setup coupled w/ gr-ieee80211 package compiling and debugging
      Minor problems implementing Bootstrap due to the theme we wish to use

PSR Week 4

    Accomplishments (Week of Feb 05):
      Flask and Terminal Units can tune our HackRF radio
      Improvements in Flask layout and features
      Improved flow process between terminal and HackRF radio
      Begun Database setup
      Github code restructure
      
 
    Plans this week (Week of Feb 12):
      Investigate ways to streamline dependencies for the GnuRadio
      Weekly bug fixes and enhancements on main app
      Continue development on test cases


    Problems & Issues:
      Modification of gr-ieee80211 C code (for printouts) slows down our development process
      Streamlining os enivronment setup for our HackRF integration

PSR Week 5

    Accomplishments (Week of Feb 12):
      Flask and Terminal Units: scan, parse, and display information back to the user
      SQLite DB chosen and setup
      Graphical additions in Flask layout and features
      Graphical additions to "main" app and cleaned up terminal code
      
 
    Plans this week (Week of Feb 19):
      Begin work on capturing and parsing Zigbee technology
      Fine tune parsing valuable data in csv files from packet captures
      Weekly bug fixes and enhancements on main app
      Continue development on test cases


    Problems & Issues:
      Beautfiying Website and Temrinal output slows down our development process
      Packaging HackRF dependencies into app environment

PSR Week 6

    Accomplishments (Week of Feb 19):
      Flask and Terminal Units gained: Import, Export, and choose table information from database functionality
      Graphical additions in Flask layout and features
      Multi-processing functionality added for "work progress" bar and executing background scripts in the terminal
      
 
    Plans this week (Week of Feb 26):
      Begin investigation into Docker container over AppImage technology for greater portability and setup
      Continue work in parsing Zigbee packets
      Weekly bug fixes and enhancements in Flask and terminal portions by focusing on user interaction
      Use Python library - unittest - for automation of hardware test cases


    Problems & Issues:
      GSM/LTE technology may or may not make it into the final product
      Simplifying user work flow to import multiple csv files into the database via terminal and flask interfaces 

PSR Week 7

    Accomplishments (Week of Feb 26):
      Application has been integrated into a Docker environment
      90% of terminal functionality is in place; last 10% is centered around database functionality
      Added interactive graphs through Web UI by using Chartjs
      
 
    Plans this week (Week of Mar 05):
      Test application features and workflows for a "complete" docker container
      Finalize all test cases to be written and automated within Python
      Weekly bug fixes and enhancements in Flask/terminal portions by focusing on user interaction
      Make additions to IEEE draft and create an ER diagram for our database
      

    Problems & Issues:
       Concerns of GSM/LTE technology integration into app linger
       Deciding whether to bring in Windows and macOS into list of supported platforms because of docker functionality

PSR Week 8

    Accomplishments (Week of Mar 05):
      TRR Presentation and enchancements to existing code base
      Implemented remaining database functionality
      Flask (Web GUI) calls custom modules for traversing app directory structure
      
 
    Plans this week (Week of Mar 12):
      Write code for 90% of automated test cases
      Weekly bug fixes and enhancements in Flask/terminal portions by focusing on user interaction
      Continue IEEE draft additions
      Continue Zigbee development      


    Problems & Issues:
      Slow Zigbee development due to C libraries
      Code refactoring for csv and database operations

PSR Week 9

    Accomplishments (Week of Mar 12):
      Finished work on decoding and capturing zigbee packets
      Finished work for 21/23 test cases (we expect very few additions to the number of test cases)
      Flask (Web GUI) page navigation and content enhancements


    Plans this week (Week of Mar 19):
      Begin work on bluetooth packet captures
      Go through our Docker documentation and see if we can get our environment easily up and running on a clean machine
      Go through Flask portion and begin testing functionality for each scan
      Integrate test cases into main app to disable or enable functionality (e.g. scan, graph generation, etc.)


    Problems & Issues:
      Null terminating values captured in HackRF output throw off live scan/test results
      Testing possibility for the last two remaining test cases to automate sending and receiving packets from the HackRF

PSR Week 10

	SKIPPED BECAUSE OF SPRING BREAK

PSR Week 11

	SPRING BREAK 

PSR Week 12

    Accomplishments (Week of Apr 02):
      Docker image runs Flask app and scans
      Scans output database information into tables and graphs (graphs are for Wifi only)
      Finished work on IEEE Paper


    Plans this week (Week of Apr 09):
      Add tabs on scan page to show graphs for Zigbee and Bluetooth
      Possibly integrate Unit Tests to enable or disable specific Flask functionality
      Fix remaining bugs in program
      Dedicate time to work on upcoming Spring Final Review Presentation


    Problems & Issues:
      Worked through team miscommunication
